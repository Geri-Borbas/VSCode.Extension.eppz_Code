{
	"name": "eppz! Code (regions.using)",
	"author": "Borbás Geri",
	"comment": "Created by Borbás Geri (https://twitter.com/_eppz) © 2017 Creative Commons 4.0 BY-NC",
	"include": "eppz-code.regions.namespace.declaration.json",
	"settings":
	[


	// Text.

		{
			"name": "Source",
			"scope": [ "source regions.using" ], // HOTFIX: Works around uncaught dots in `using-directive`
			"settings": { "foreground": "#424c7a" } // Color for "Punctuation"
		},
		{
			"name": "Keyword (operator)",
			"scope": [ "regions.using keyword.operator" ],
			"settings": { "foreground": "#4d598e" }
		},
		{
			"name": "Punctuation",
			"scope": [ "regions.using punctuation" ],
			"settings": { "foreground": "#424c7a" }
		},
		{
			"name": "Punctuation (parenthesis)",
			"scope": [ "regions.using punctuation.parenthesis" ],
			"settings": { "foreground": "#38416a" }
		},
		{
			"name": "Punctuation (square bracket)",
			"scope": [ "regions.using punctuation.squarebracket" ],
			"settings": { "foreground": "#31395e" }
		},
		{
			"name": "Punctuation (curly brace)",
			"scope": [ "regions.using punctuation.curlybrace" ],
			"settings": { "foreground": "#2b3254" }
		},
		{
			"name": "Comment",
			"scope":
			[
				"regions.using comment",
				"regions.using comment punctuation",
				"regions.using comment punctuation.parenthesis",
				"regions.using comment punctuation.squarebracket",
			 	"regions.using comment punctuation.curlybrace",
				"regions.using comment keyword",
				"regions.using comment entity",
				"regions.using comment variable",
				"regions.using comment string"
			],
			"settings": { "foreground": "#3e4358" }
		},


	// Literals.

		{
			"name": "Literals (constant)",
			"scope": [ "regions.using constant" ],
			"settings": { "foreground": "#37438f" }
		},
		{
			"name": "Literals (null)",
			"scope": [ "regions.using constant.language.null" ],
			"settings": { "foreground": "#37438f" }
		},
		{
			"name": "Literals (Numeric)",
			"scope": [ "regions.using constant.numeric" ],
			"settings": { "foreground": "#374c8f" }
		},
		{
			"name": "Literals (String)",
			"scope":
			[
				"regions.using string.quoted.double",
				"regions.using string.quoted.double punctuation"
			],
			"settings": { "foreground": "#37548f" }
		},
		{
			"name": "Literals (Escape)",
			"scope": [ "regions.using constant.character.escape" ],
			"settings": { "foreground": "#37548f" }
		},
		{
			"name": "Literals (Char)",
			"scope":
			[
				"regions.using string.quoted.single",
				"regions.using string.quoted.single punctuation"
			],
			"settings": { "foreground": "#365786" }
		},


	// Functions.

		{
			"name": "Functions",
			"scope":
			[
				"regions.using entity.name.function",
				"regions.using entity.name.method",
				"regions.using keyword.other.get",
				"regions.using keyword.other.set",				
				"regions.using keyword.other.add",				
				"regions.using keyword.other.remove"			
			],
			"settings": { "foreground": "#2a4462" }
		},


	// Functions (support).

		{
			"name": "Functions (UnityEngine)",
			"scope": [ "regions.using support.function.UnityEngine" ],
			"settings": { "foreground": "#2a4462" }
		},
		{
			"name": "Functions (UnityEditor)",
			"scope": [ "regions.using support.function.UnityEditor" ],
			"settings": { "foreground": "#2a4462" }
		},
		{
			"name": "Functions (System)",
			"scope": [ "regions.using support.function.System" ],
			"settings": { "foreground": "#2a4462" }
		},


	// Types.

		{
			"name": "Types",
			"regions.using comment": "Including classes, delegates, enums, interfaces, structs.",
			"scope":
			[
				"regions.using storage.type",
				"regions.using entity.name.type.type-parameter"
			],
			"settings": { "foreground": "#525d7c" }
		},
		{
			"name": "Types (built-in)",
			"scope": [ "regions.using keyword.type" ],
			"settings": { "foreground": "#525d7c" }
		},
		{
			"name": "Types (<>)",
			"scope": [ "regions.using punctuation.definition.typeparameters" ],
			"settings": { "foreground": "#525d7c" }
		},


	// Types (support).

		{
			"name": "Types (UnityEngine)",
			"scope": [ "regions.using support.type.UnityEngine" ],
			"settings": { "foreground": "#525d7c" }
		},
		{
			"name": "Types (UnityEditor)",
			"scope": [ "regions.using support.type.UnityEditor" ],
			"settings": { "foreground": "#525d7c" }
		},
		{
			"name": "Types (System)",
			"scope": [ "regions.using support.type.System" ],
			"settings": { "foreground": "#525d7c" }
		},


	// Modifiers.

		{
			"name": "Moifiers",
			"scope": [ "regions.using storage.modifier" ],
			"settings": { "foreground": "#525d7c" }
		},


	// Types (declarations).

		{
			"name": "Types (declarations)",
			"regions.using comment": "Including classes, delegates, enums, interfaces, structs.",
			"scope": [ "regions.using entity.name.type" ],
			"settings": { "foreground": "#52596c" }
		},


	// Keywords.

		{
			"name": "Keywords",
			"scope":
			[
				"regions.using keyword.control",
				"regions.using keyword.operator.conditional",
				"regions.using keyword.query"
			],
			"settings": { "foreground": "#4c4e70" }
		},
		{
			"name": "Keywords (other)",
			"scope": [ "regions.using keyword.other" ],
			"settings": { "foreground": "#4c4e70" }
		},


	// Preprocessor.

		{
			"name": "Preprocessor",
			"scope":
			[
				"regions.using meta.preprocessor",
				"regions.using meta.preprocessor punctuation",
				"regions.using meta.preprocessor punctuation.parenthesis",
				"regions.using meta.preprocessor punctuation.squarebracket",
			 	"regions.using meta.preprocessor punctuation.curlybrace",
				"regions.using meta.preprocessor keyword"
			],
			"settings": { "foreground": "#926b73" }
		},
		{
			"name": "Preprocessor (entities)",
			"scope":
			[
				"regions.using meta.preprocessor entity",
				"regions.using meta.preprocessor entity.name.method",				
				"regions.using meta.preprocessor entity.name.function",				
				"regions.using meta.preprocessor entity.name.variable",
				"regions.using meta.preprocessor variable",
				"regions.using meta.preprocessor string"
			],
			"settings": { "foreground": "#926b73" }
		},


	// Variables.

		{
			"name": "Variables",
			"scope":
			[
				"regions.using variable.other.readwrite",
				"regions.using variable.other.object",
				"regions.using variable.other.alias",
				"regions.using entity.name.variable",
				"regions.using keyword.other.base",
				"regions.using keyword.other.this"		
			],
			"settings": { "foreground": "#413b5f" }
		},
		{
			"name": "Variables (local)",
			"scope":
			[
				"regions.using variable.other.object.property",
				"regions.using entity.name.variable.local"
			],
			"settings": { "foreground": "#413b5f" }
		},


	// Variables (support).

		{
			"name": "Variables (UnityEngine)",
			"scope": [ "regions.using support.variable.UnityEngine" ],
			"settings": { "foreground": "#413b5f" }
		},
		{
			"name": "Variables (UnityEditor)",
			"scope": [ "regions.using support.variable.UnityEditor" ],
			"settings": { "foreground": "#413b5f" }
		},
		{
			"name": "Variables (System)",
			"scope": [ "regions.using support.variable.System" ],
			"settings": { "foreground": "#413b5f" }
		}
		

	]
}